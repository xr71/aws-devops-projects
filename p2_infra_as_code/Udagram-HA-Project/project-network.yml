Description: >
    Project 2 of Udacity DevOps Nanodegree
    Author Xu Ren 
    Date April 2020 
    This will provision all network resources for an apache2 app automatically
    packaged in S3 and deployed on an EC2 instance 

Parameters:

    EnvironmentName:
        Type: String
        Default: UdacityCloudformation
    VpcCidr:
        Type: String
        Default: 10.0.0.0/16
    SubnetBitmask:
        Type: String
        Default: 24
    PublicSubnet1Ip:
        Type: String
        Default: 10.0.0.0/24
    PublicSubnet2Ip:
        Type: String
        Default: 10.0.1.0/24
    PrivateSubnet1Ip:
        Type: String
        Default: 10.0.2.0/24
    PrivateSubnet2Ip:
        Type: String
        Default: 10.0.3.0/24

Resources:
    Vpc:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCidr
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                !Select
                    - 0
                    - !GetAZs
            CidrBlock:
                Fn::Join: ["/", [!Ref PublicSubnet1Ip, !Ref SubnetBitmask]]
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            VpcId: !Ref Vpc

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                !Select
                    - 1
                    - !GetAZs
            CidrBlock:
                Fn::Join: ["/", [!Ref PublicSubnet2Ip, !Ref SubnetBitmask]]
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            VpcId: !Ref Vpc
          
    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                !Select
                    - 0
                    - !GetAZs
            CidrBlock:
                Fn::Join: ["/", [!Ref PrivateSubnet1Ip, !Ref SubnetBitmask]]
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            VpcId: !Ref Vpc          

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                !Select
                    - 1
                    - !GetAZs
            CidrBlock:
                Fn::Join: ["/", [!Ref PrivateSubnet2Ip, !Ref SubnetBitmask]]
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            VpcId: !Ref Vpc 

    Eip1:
        Type: AWS::EC2::EIP
        DependsOn: IgwAttachment
        Properties:
            Domain: vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
        
    Eip2:
        Type: AWS::EC2::EIP
        DependsOn: IgwAttachment
        Properties:
            Domain: vpc
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    Ngw1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId:
                Fn::GetAtt:
                    - Eip1
                    - AllocationId
            SubnetId: !Ref PublicSubnet1
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    Ngw2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId:
                Fn::GetAtt:
                    - Eip2
                    - AllocationId
            SubnetId: !Ref PublicSubnet2
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName  

    Igw:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    IgwAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref Igw
            VpcId: !Ref Vpc

# Route Tables

    PrivateRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            VpcId: !Ref Vpc    

    PrivateRouteTable2:
      Type: AWS::EC2::RouteTable
      Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            VpcId: !Ref Vpc
    
    PublicRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            VpcId: !Ref Vpc

# Route Table Association
    PrivateRouteTable1Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateRouteTable2Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

    PublicRouteTable1Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable1
            SubnetId: !Ref PublicSubnet1  

    PublicRouteTable2Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable1
            SubnetId: !Ref PublicSubnet2  

# Routes

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        DependsOn: Igw
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            NatGatewayId: !Ref Ngw1
            RouteTableId: !Ref PrivateRouteTable1

    DefaultPrivateRoute2:
      Type: AWS::EC2::Route
      Properties:
          DestinationCidrBlock: "0.0.0.0/0"
          NatGatewayId: !Ref Ngw2
          RouteTableId: !Ref PrivateRouteTable2   

    DefaultPublicRoute1:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            GatewayId: !Ref Igw
            RouteTableId: !Ref PublicRouteTable1 

Outputs:

    Vpc:
        Description: "my VPC"
        Value: !Ref Vpc
        Export:
            Name: !Sub ${EnvironmentName}-Vpc
    SubnetBitmask:
        Description: "the subnet bitmask of all subnets"
        Value: !Ref SubnetBitmask
        Export:
            Name: !Sub ${EnvironmentName}-Subnet-Bitmask
    PrivateSubnet1:
        Description: "ID of private Subnet 1"
        Value:  !Ref PrivateSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-Priv-Subnet-1
    PrivateSubnet2:
        Description: "ID of private Subnet 2"
        Value:  !Ref PrivateSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-Priv-Subnet-2
    PublicSubnet1:
        Description: "ID of public Subnet 1"
        Value:  !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-Pub-Subnet-1
    PublicSubnet2:
        Description: "ID of public Subnet 2"
        Value:  !Ref PublicSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-Pub-Subnet-2